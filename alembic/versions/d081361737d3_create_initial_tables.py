"""Create initial tables

Revision ID: d081361737d3
Revises:
Create Date: 2025-07-03 01:53:14.422107

"""

from collections.abc import Sequence

import sqlalchemy as sa

import common
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d081361737d3"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "conversation_analytics",
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("total_conversations", sa.Integer(), nullable=False),
        sa.Column("completed_conversations", sa.Integer(), nullable=False),
        sa.Column("abandoned_conversations", sa.Integer(), nullable=False),
        sa.Column("error_conversations", sa.Integer(), nullable=False),
        sa.Column("average_turns_per_conversation", sa.Float(), nullable=True),
        sa.Column("average_messages_per_conversation", sa.Float(), nullable=True),
        sa.Column("average_conversation_duration", sa.Float(), nullable=True),
        sa.Column("median_conversation_duration", sa.Float(), nullable=True),
        sa.Column("average_data_quality", sa.Float(), nullable=True),
        sa.Column("average_efficiency", sa.Float(), nullable=True),
        sa.Column("average_user_satisfaction", sa.Float(), nullable=True),
        sa.Column("activity_breakdown", sa.JSON(), nullable=False),
        sa.Column("completion_rate_by_activity", sa.JSON(), nullable=False),
        sa.Column("most_asked_questions", sa.JSON(), nullable=False),
        sa.Column("most_problematic_fields", sa.JSON(), nullable=False),
        sa.Column("question_success_rates", sa.JSON(), nullable=False),
        sa.Column("average_time_per_stage", sa.JSON(), nullable=False),
        sa.Column("stage_completion_rates", sa.JSON(), nullable=False),
        sa.Column("average_ai_response_time", sa.Float(), nullable=True),
        sa.Column("ai_model_usage", sa.JSON(), nullable=False),
        sa.Column("total_ai_tokens_used", sa.Integer(), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conversation_analytics_date"),
        "conversation_analytics",
        ["date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversation_analytics_id"),
        "conversation_analytics",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_conversation_analytics_user_id"),
        "conversation_analytics",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "conversations",
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column(
            "activity_type",
            sa.Enum(
                "FITNESS",
                "CRICKET_COACHING",
                "CRICKET_MATCH",
                "REST_DAY",
                name="activitytype",
            ),
            nullable=False,
        ),
        sa.Column(
            "state",
            sa.Enum(
                "STARTED",
                "COLLECTING_DATA",
                "ASKING_FOLLOWUP",
                "VALIDATING_DATA",
                "COMPLETED",
                "ERROR",
                "ABANDONED",
                name="conversationstate",
            ),
            nullable=False,
        ),
        sa.Column(
            "stage",
            sa.Enum(
                "INITIAL_INPUT",
                "BASIC_DATA_COLLECTION",
                "DETAILED_DATA_COLLECTION",
                "CLARIFICATION",
                "VALIDATION",
                "FINALIZATION",
                name="conversationstage",
            ),
            nullable=False,
        ),
        sa.Column("current_data", sa.JSON(), nullable=False),
        sa.Column("data_confidence", sa.JSON(), nullable=False),
        sa.Column("missing_fields", sa.JSON(), nullable=False),
        sa.Column("validation_errors", sa.JSON(), nullable=False),
        sa.Column("pending_questions", sa.JSON(), nullable=False),
        sa.Column("question_attempts", sa.JSON(), nullable=False),
        sa.Column("max_turns_allowed", sa.Integer(), nullable=False),
        sa.Column("total_turns", sa.Integer(), nullable=False),
        sa.Column("total_messages", sa.Integer(), nullable=False),
        sa.Column("completion_status", sa.String(), nullable=False),
        sa.Column("overall_data_quality_score", sa.Float(), nullable=True),
        sa.Column("conversation_efficiency", sa.Float(), nullable=True),
        sa.Column("user_satisfaction_score", sa.Float(), nullable=True),
        sa.Column("final_data", sa.JSON(), nullable=False),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "last_activity_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("total_duration_seconds", sa.Float(), nullable=True),
        sa.Column("activity_entry_id", sa.UUID(), nullable=True),
        sa.Column("activity_entry_type", sa.String(), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conversations_activity_type"),
        "conversations",
        ["activity_type"],
        unique=False,
    )
    op.create_index(op.f("ix_conversations_id"), "conversations", ["id"], unique=True)
    op.create_index(
        op.f("ix_conversations_session_id"),
        "conversations",
        ["session_id"],
        unique=True,
    )
    op.create_index(op.f("ix_conversations_user_id"), "conversations", ["user_id"], unique=False)
    op.create_table(
        "conversation_turns",
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("turn_number", sa.Integer(), nullable=False),
        sa.Column("data_extracted_this_turn", sa.JSON(), nullable=False),
        sa.Column("questions_resolved", sa.JSON(), nullable=False),
        sa.Column("new_questions_raised", sa.JSON(), nullable=False),
        sa.Column("turn_effectiveness_score", sa.Float(), nullable=True),
        sa.Column("data_completeness_after_turn", sa.Float(), nullable=True),
        sa.Column("turn_strategy", sa.String(), nullable=True),
        sa.Column(
            "turn_started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("turn_completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("turn_duration_seconds", sa.Float(), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_conversation_turns_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conversation_turns_conversation_id"),
        "conversation_turns",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(op.f("ix_conversation_turns_id"), "conversation_turns", ["id"], unique=True)
    op.create_table(
        "cricket_coaching_entries",
        sa.Column(
            "entry_type",
            sa.Enum("FITNESS", "CRICKET_COACHING", "CRICKET_MATCH", "REST_DAY", name="entrytype"),
            nullable=False,
        ),
        sa.Column("coach_name", sa.String(), nullable=False),
        sa.Column("session_type", sa.String(), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column(
            "primary_focus",
            sa.Enum(
                "TECHNIQUE",
                "FITNESS",
                "TACTICS",
                "MENTAL",
                "SPECIFIC_SKILLS",
                "GAME_SITUATION",
                name="coachingfocus",
            ),
            nullable=True,
        ),
        sa.Column(
            "secondary_focus",
            sa.Enum(
                "TECHNIQUE",
                "FITNESS",
                "TACTICS",
                "MENTAL",
                "SPECIFIC_SKILLS",
                "GAME_SITUATION",
                name="coachingfocus",
            ),
            nullable=True,
        ),
        sa.Column("skills_practiced", sa.JSON(), nullable=False),
        sa.Column(
            "discipline_focus",
            sa.Enum(
                "BATTING",
                "BOWLING",
                "FIELDING",
                "WICKET_KEEPING",
                "ALL_ROUND",
                name="cricketdiscipline",
            ),
            nullable=True,
        ),
        sa.Column("warm_up_minutes", sa.Integer(), nullable=True),
        sa.Column("skill_work_minutes", sa.Integer(), nullable=True),
        sa.Column("game_simulation_minutes", sa.Integer(), nullable=True),
        sa.Column("cool_down_minutes", sa.Integer(), nullable=True),
        sa.Column("equipment_used", sa.JSON(), nullable=True),
        sa.Column("facility_name", sa.String(), nullable=True),
        sa.Column("indoor_outdoor", sa.String(), nullable=True),
        sa.Column("technique_rating", sa.Integer(), nullable=True),
        sa.Column("effort_level", sa.Integer(), nullable=True),
        sa.Column("coach_feedback", sa.String(), nullable=True),
        sa.Column("improvement_areas", sa.JSON(), nullable=True),
        sa.Column("session_goals", sa.JSON(), nullable=True),
        sa.Column("goals_achieved", sa.JSON(), nullable=True),
        sa.Column("next_session_focus", sa.String(), nullable=True),
        sa.Column("session_cost", sa.Float(), nullable=True),
        sa.Column("group_size", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=True),
        sa.Column("end_time", sa.Time(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("original_transcript", sa.String(), nullable=False),
        sa.Column("overall_confidence_score", sa.Float(), nullable=False),
        sa.Column("processing_duration", sa.Float(), nullable=True),
        sa.Column("data_quality_score", sa.Float(), nullable=True),
        sa.Column("manual_overrides", sa.JSON(), nullable=True),
        sa.Column("validation_notes", sa.String(), nullable=True),
        sa.Column("mental_state", sa.String(), nullable=False),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("activity_timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_cricket_coaching_entries_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cricket_coaching_entries_conversation_id"),
        "cricket_coaching_entries",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_coaching_entries_entry_type"),
        "cricket_coaching_entries",
        ["entry_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_coaching_entries_id"),
        "cricket_coaching_entries",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_cricket_coaching_entries_session_id"),
        "cricket_coaching_entries",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_coaching_entries_user_id"),
        "cricket_coaching_entries",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "cricket_match_entries",
        sa.Column(
            "entry_type",
            sa.Enum("FITNESS", "CRICKET_COACHING", "CRICKET_MATCH", "REST_DAY", name="entrytype"),
            nullable=False,
        ),
        sa.Column(
            "match_format",
            sa.Enum(
                "T20",
                "ODI",
                "TEST",
                "LIST_A",
                "FIRST_CLASS",
                "FRIENDLY",
                "PRACTICE_MATCH",
                name="matchformat",
            ),
            nullable=True,
        ),
        sa.Column("opposition_team", sa.String(), nullable=False),
        sa.Column("venue", sa.String(), nullable=False),
        sa.Column("home_away", sa.String(), nullable=False),
        sa.Column("result", sa.String(), nullable=False),
        sa.Column("team_name", sa.String(), nullable=False),
        sa.Column("team_total", sa.Integer(), nullable=True),
        sa.Column("team_wickets", sa.Integer(), nullable=True),
        sa.Column("team_overs", sa.Float(), nullable=True),
        sa.Column("opposition_total", sa.Integer(), nullable=True),
        sa.Column("opposition_wickets", sa.Integer(), nullable=True),
        sa.Column("opposition_overs", sa.Float(), nullable=True),
        sa.Column("batting_position", sa.Integer(), nullable=True),
        sa.Column("runs_scored", sa.Integer(), nullable=True),
        sa.Column("balls_faced", sa.Integer(), nullable=True),
        sa.Column("boundaries", sa.Integer(), nullable=True),
        sa.Column("sixes", sa.Integer(), nullable=True),
        sa.Column("dismissal_type", sa.String(), nullable=True),
        sa.Column("strike_rate", sa.Float(), nullable=True),
        sa.Column("overs_bowled", sa.Float(), nullable=True),
        sa.Column("runs_conceded", sa.Integer(), nullable=True),
        sa.Column("wickets_taken", sa.Integer(), nullable=True),
        sa.Column("economy_rate", sa.Float(), nullable=True),
        sa.Column("best_bowling", sa.String(), nullable=True),
        sa.Column("catches_taken", sa.Integer(), nullable=True),
        sa.Column("run_outs", sa.Integer(), nullable=True),
        sa.Column("stumpings", sa.Integer(), nullable=True),
        sa.Column("fielding_position", sa.String(), nullable=True),
        sa.Column("weather_conditions", sa.String(), nullable=True),
        sa.Column("pitch_conditions", sa.String(), nullable=True),
        sa.Column("toss_won_by", sa.String(), nullable=True),
        sa.Column("elected_to", sa.String(), nullable=True),
        sa.Column("batting_performance", sa.Integer(), nullable=True),
        sa.Column("bowling_performance", sa.Integer(), nullable=True),
        sa.Column("fielding_performance", sa.Integer(), nullable=True),
        sa.Column("overall_performance", sa.Integer(), nullable=True),
        sa.Column("key_moments", sa.JSON(), nullable=True),
        sa.Column("what_went_well", sa.JSON(), nullable=True),
        sa.Column("areas_for_improvement", sa.JSON(), nullable=True),
        sa.Column("captain_feedback", sa.String(), nullable=True),
        sa.Column("coach_feedback", sa.String(), nullable=True),
        sa.Column("match_duration_hours", sa.Float(), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=True),
        sa.Column("end_time", sa.Time(), nullable=True),
        sa.Column("match_fee", sa.Float(), nullable=True),
        sa.Column("travel_distance_km", sa.Float(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("original_transcript", sa.String(), nullable=False),
        sa.Column("overall_confidence_score", sa.Float(), nullable=False),
        sa.Column("processing_duration", sa.Float(), nullable=True),
        sa.Column("data_quality_score", sa.Float(), nullable=True),
        sa.Column("manual_overrides", sa.JSON(), nullable=True),
        sa.Column("validation_notes", sa.String(), nullable=True),
        sa.Column("mental_state", sa.String(), nullable=False),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("activity_timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_cricket_match_entries_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cricket_match_entries_conversation_id"),
        "cricket_match_entries",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_match_entries_entry_type"),
        "cricket_match_entries",
        ["entry_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_match_entries_id"),
        "cricket_match_entries",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_cricket_match_entries_session_id"),
        "cricket_match_entries",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cricket_match_entries_user_id"),
        "cricket_match_entries",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "fitness_entries",
        sa.Column(
            "entry_type",
            sa.Enum("FITNESS", "CRICKET_COACHING", "CRICKET_MATCH", "REST_DAY", name="entrytype"),
            nullable=False,
        ),
        sa.Column(
            "exercise_type",
            sa.Enum("CARDIO", "STRENGTH", "FLEXIBILITY", "SPORTS", "OTHER", name="exercisetype"),
            nullable=False,
        ),
        sa.Column("exercise_name", sa.String(), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column(
            "intensity",
            sa.Enum("LOW", "MODERATE", "HIGH", "VERY_HIGH", name="intensitylevel"),
            nullable=False,
        ),
        sa.Column("calories_burned", sa.Integer(), nullable=True),
        sa.Column("distance_km", sa.Float(), nullable=True),
        sa.Column("sets", sa.Integer(), nullable=True),
        sa.Column("reps", sa.Integer(), nullable=True),
        sa.Column("weight_kg", sa.Float(), nullable=True),
        sa.Column("heart_rate_avg", sa.Integer(), nullable=True),
        sa.Column("heart_rate_max", sa.Integer(), nullable=True),
        sa.Column("workout_rating", sa.Integer(), nullable=True),
        sa.Column("equipment_used", sa.JSON(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("gym_name", sa.String(), nullable=True),
        sa.Column("weather_conditions", sa.String(), nullable=True),
        sa.Column("temperature", sa.Float(), nullable=True),
        sa.Column("workout_partner", sa.String(), nullable=True),
        sa.Column("trainer_name", sa.String(), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=True),
        sa.Column("end_time", sa.Time(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("original_transcript", sa.String(), nullable=False),
        sa.Column("overall_confidence_score", sa.Float(), nullable=False),
        sa.Column("processing_duration", sa.Float(), nullable=True),
        sa.Column("data_quality_score", sa.Float(), nullable=True),
        sa.Column("manual_overrides", sa.JSON(), nullable=True),
        sa.Column("validation_notes", sa.String(), nullable=True),
        sa.Column("mental_state", sa.String(), nullable=False),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("activity_timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_fitness_entries_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_fitness_entries_conversation_id"),
        "fitness_entries",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fitness_entries_entry_type"),
        "fitness_entries",
        ["entry_type"],
        unique=False,
    )
    op.create_index(op.f("ix_fitness_entries_id"), "fitness_entries", ["id"], unique=True)
    op.create_index(
        op.f("ix_fitness_entries_session_id"),
        "fitness_entries",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fitness_entries_user_id"),
        "fitness_entries",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "question_contexts",
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("target_field", sa.String(), nullable=False),
        sa.Column("question_text", sa.String(), nullable=False),
        sa.Column(
            "question_type",
            sa.Enum(
                "REQUIRED",
                "OPTIONAL",
                "CLARIFICATION",
                "VALIDATION",
                "FOLLOW_UP",
                name="questiontype",
            ),
            nullable=False,
        ),
        sa.Column("asked_at_turn", sa.Integer(), nullable=False),
        sa.Column("attempts_count", sa.Integer(), nullable=False),
        sa.Column("max_attempts", sa.Integer(), nullable=False),
        sa.Column(
            "resolution_status",
            sa.Enum(
                "PENDING",
                "ANSWERED",
                "SKIPPED",
                "FAILED",
                "RETRYING",
                name="resolutionstatus",
            ),
            nullable=False,
        ),
        sa.Column("question_strategy", sa.String(), nullable=False),
        sa.Column("context_data", sa.JSON(), nullable=False),
        sa.Column("resolved_at_turn", sa.Integer(), nullable=True),
        sa.Column("resolved_with_confidence", sa.Float(), nullable=True),
        sa.Column("final_answer", sa.String(), nullable=True),
        sa.Column(
            "first_asked_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("resolved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_question_contexts_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_question_contexts_conversation_id"),
        "question_contexts",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(op.f("ix_question_contexts_id"), "question_contexts", ["id"], unique=True)
    op.create_index(
        op.f("ix_question_contexts_target_field"),
        "question_contexts",
        ["target_field"],
        unique=False,
    )
    op.create_table(
        "rest_day_entries",
        sa.Column(
            "entry_type",
            sa.Enum("FITNESS", "CRICKET_COACHING", "CRICKET_MATCH", "REST_DAY", name="entrytype"),
            nullable=False,
        ),
        sa.Column("rest_type", sa.String(), nullable=False),
        sa.Column("planned", sa.Boolean(), nullable=False),
        sa.Column("recovery_activities", sa.JSON(), nullable=True),
        sa.Column("sleep_hours", sa.Float(), nullable=True),
        sa.Column("sleep_quality", sa.Integer(), nullable=True),
        sa.Column("muscle_soreness", sa.Integer(), nullable=True),
        sa.Column("fatigue_level", sa.Integer(), nullable=True),
        sa.Column("stress_level", sa.Integer(), nullable=True),
        sa.Column("recovery_score", sa.Integer(), nullable=True),
        sa.Column("readiness_for_next_workout", sa.Integer(), nullable=True),
        sa.Column("meditation_minutes", sa.Integer(), nullable=True),
        sa.Column("stretching_minutes", sa.Integer(), nullable=True),
        sa.Column("massage_minutes", sa.Integer(), nullable=True),
        sa.Column("hydration_liters", sa.Float(), nullable=True),
        sa.Column("protein_focus", sa.Boolean(), nullable=True),
        sa.Column("nutrition_notes", sa.String(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("original_transcript", sa.String(), nullable=False),
        sa.Column("overall_confidence_score", sa.Float(), nullable=False),
        sa.Column("processing_duration", sa.Float(), nullable=True),
        sa.Column("data_quality_score", sa.Float(), nullable=True),
        sa.Column("manual_overrides", sa.JSON(), nullable=True),
        sa.Column("validation_notes", sa.String(), nullable=True),
        sa.Column("mental_state", sa.String(), nullable=False),
        sa.Column("energy_level", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("activity_timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_rest_day_entries_conversation_id_conversations"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_rest_day_entries_conversation_id"),
        "rest_day_entries",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_rest_day_entries_entry_type"),
        "rest_day_entries",
        ["entry_type"],
        unique=False,
    )
    op.create_index(op.f("ix_rest_day_entries_id"), "rest_day_entries", ["id"], unique=True)
    op.create_index(
        op.f("ix_rest_day_entries_session_id"),
        "rest_day_entries",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_rest_day_entries_user_id"),
        "rest_day_entries",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "conversation_messages",
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("turn_id", sa.UUID(), nullable=True),
        sa.Column(
            "message_type",
            sa.Enum(
                "USER_INPUT",
                "AI_RESPONSE",
                "FOLLOW_UP_QUESTION",
                "CLARIFICATION_REQUEST",
                "VALIDATION_CHECK",
                "SYSTEM_MESSAGE",
                name="messagetype",
            ),
            nullable=False,
        ),
        sa.Column("sequence_number", sa.Integer(), nullable=False),
        sa.Column("parent_message_id", sa.UUID(), nullable=True),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("raw_transcript", sa.String(), nullable=True),
        sa.Column("transcript_confidence", sa.Float(), nullable=True),
        sa.Column("processing_duration", sa.Float(), nullable=True),
        sa.Column("ai_model_used", sa.String(), nullable=True),
        sa.Column("ai_temperature", sa.Float(), nullable=True),
        sa.Column("ai_tokens_used", sa.Integer(), nullable=True),
        sa.Column("extracted_data", sa.JSON(), nullable=False),
        sa.Column("extraction_confidence", sa.Float(), nullable=True),
        sa.Column(
            "message_timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "id",
            sa.UUID(),
            nullable=False,
            comment="Unique identifier for the record (Primary Key).",
        ),
        sa.Column(
            "created_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record creation timestamp.",
        ),
        sa.Column(
            "updated_at",
            common.mixins.timestamp_mixin.UTCDateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
            comment="Record last update timestamp.",
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name=op.f("fk_conversation_messages_conversation_id_conversations"),
        ),
        sa.ForeignKeyConstraint(
            ["parent_message_id"],
            ["conversation_messages.id"],
            name=op.f("fk_conversation_messages_parent_message_id_conversation_messages"),
        ),
        sa.ForeignKeyConstraint(
            ["turn_id"],
            ["conversation_turns.id"],
            name=op.f("fk_conversation_messages_turn_id_conversation_turns"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conversation_messages_conversation_id"),
        "conversation_messages",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversation_messages_id"),
        "conversation_messages",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_conversation_messages_turn_id"),
        "conversation_messages",
        ["turn_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_conversation_messages_turn_id"), table_name="conversation_messages")
    op.drop_index(op.f("ix_conversation_messages_id"), table_name="conversation_messages")
    op.drop_index(
        op.f("ix_conversation_messages_conversation_id"),
        table_name="conversation_messages",
    )
    op.drop_table("conversation_messages")
    op.drop_index(op.f("ix_rest_day_entries_user_id"), table_name="rest_day_entries")
    op.drop_index(op.f("ix_rest_day_entries_session_id"), table_name="rest_day_entries")
    op.drop_index(op.f("ix_rest_day_entries_id"), table_name="rest_day_entries")
    op.drop_index(op.f("ix_rest_day_entries_entry_type"), table_name="rest_day_entries")
    op.drop_index(op.f("ix_rest_day_entries_conversation_id"), table_name="rest_day_entries")
    op.drop_table("rest_day_entries")
    op.drop_index(op.f("ix_question_contexts_target_field"), table_name="question_contexts")
    op.drop_index(op.f("ix_question_contexts_id"), table_name="question_contexts")
    op.drop_index(op.f("ix_question_contexts_conversation_id"), table_name="question_contexts")
    op.drop_table("question_contexts")
    op.drop_index(op.f("ix_fitness_entries_user_id"), table_name="fitness_entries")
    op.drop_index(op.f("ix_fitness_entries_session_id"), table_name="fitness_entries")
    op.drop_index(op.f("ix_fitness_entries_id"), table_name="fitness_entries")
    op.drop_index(op.f("ix_fitness_entries_entry_type"), table_name="fitness_entries")
    op.drop_index(op.f("ix_fitness_entries_conversation_id"), table_name="fitness_entries")
    op.drop_table("fitness_entries")
    op.drop_index(op.f("ix_cricket_match_entries_user_id"), table_name="cricket_match_entries")
    op.drop_index(op.f("ix_cricket_match_entries_session_id"), table_name="cricket_match_entries")
    op.drop_index(op.f("ix_cricket_match_entries_id"), table_name="cricket_match_entries")
    op.drop_index(op.f("ix_cricket_match_entries_entry_type"), table_name="cricket_match_entries")
    op.drop_index(
        op.f("ix_cricket_match_entries_conversation_id"),
        table_name="cricket_match_entries",
    )
    op.drop_table("cricket_match_entries")
    op.drop_index(
        op.f("ix_cricket_coaching_entries_user_id"),
        table_name="cricket_coaching_entries",
    )
    op.drop_index(
        op.f("ix_cricket_coaching_entries_session_id"),
        table_name="cricket_coaching_entries",
    )
    op.drop_index(op.f("ix_cricket_coaching_entries_id"), table_name="cricket_coaching_entries")
    op.drop_index(
        op.f("ix_cricket_coaching_entries_entry_type"),
        table_name="cricket_coaching_entries",
    )
    op.drop_index(
        op.f("ix_cricket_coaching_entries_conversation_id"),
        table_name="cricket_coaching_entries",
    )
    op.drop_table("cricket_coaching_entries")
    op.drop_index(op.f("ix_conversation_turns_id"), table_name="conversation_turns")
    op.drop_index(op.f("ix_conversation_turns_conversation_id"), table_name="conversation_turns")
    op.drop_table("conversation_turns")
    op.drop_index(op.f("ix_conversations_user_id"), table_name="conversations")
    op.drop_index(op.f("ix_conversations_session_id"), table_name="conversations")
    op.drop_index(op.f("ix_conversations_id"), table_name="conversations")
    op.drop_index(op.f("ix_conversations_activity_type"), table_name="conversations")
    op.drop_table("conversations")
    op.drop_index(op.f("ix_conversation_analytics_user_id"), table_name="conversation_analytics")
    op.drop_index(op.f("ix_conversation_analytics_id"), table_name="conversation_analytics")
    op.drop_index(op.f("ix_conversation_analytics_date"), table_name="conversation_analytics")
    op.drop_table("conversation_analytics")
    # ### end Alembic commands ###
